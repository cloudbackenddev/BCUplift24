
1. What is the purpose of the Java Garbage Collector?
   a) To allocate memory for objects
   b) To release memory occupied by unused objects
   c) To optimize code execution
   d) To manage database connections

Ans:- b = To release memory occupied by unused objects

2. Which part of the Java Virtual Machine (JVM) is responsible for garbage collection?
   a) Class Loader
   b) JVM Compiler
   c) Runtime Data Area
   d) Bytecode Verifier

Ans:- b = JVM compiler

3. How does the Garbage Collector determine if an object is eligible for garbage collection?
   a) By checking if the object is reachable
   b) By examining the object's reference count
   c) By the size of the object
   d) By the object's creation time

Ans:- a =  By checking if the object is reachable

4. Which of the following are Java Garbage Collection algorithms?
   a) Stack-based algorithm
   b) Mark-and-Sweep
   c) Bubble Sort
   d) Depth-First Search

Ans:- b = Mark-and-Sweep
 

5. In Java, which part of the memory is managed by the Garbage Collector?
   a) Stack
   b) Heap
   c) Cache
   d) Register

Ans:- d = Register

6. Which of the following is not a generation in the generational garbage collection model?
   a) Young Generation
   b) Old Generation
   c) Infant Generation
   d) Permanent Generation

Ans:- c = Infant Generation

7. What is a "stop-the-world" event in the context of Garbage Collection?
   a) A situation where the Garbage Collector runs concurrently with the application
   b) A situation where the application is paused while Garbage Collection is performed
   c) A situation where an object is pinned in memory
   d) A situation where Garbage Collection never occurs

Ans:- b = A situation where the application is paused while Garbage Collection is performed

8. What is the purpose of the "System.gc()" method in Java?
   a) To explicitly trigger garbage collection
   b) To increase memory allocation for the JVM
   c) To reduce the memory footprint of an application
   d) To start a new JVM instance

Ans:- a = To explicitly trigger garbage collection

9. Which garbage collection algorithm is typically used for the Young Generation in the JVM?
   a) Mark-and-Sweep
   b) Generational Garbage Collection
   c) Parallel Garbage Collection
   d) Concurrent Garbage Collection
Ans:- a = Mark-and-Sweep
10. In the context of Garbage Collection, what is the PermGen (Permanent Generation) used for?
    a) Storing live objects
    b) Storing the heap
    c) Storing class metadata, such as classes and methods
    d) Managing thread pools

Ans:- c = Storing class metadata, such as classes and methods

Subjective Questions:

11. Why Garbage Collection is necessary in Java?  

Ans:-  Java has a automatic memory management system. Which leads to manage memory automatically 
So that programmer do not need to to all those things manually by using free() ,  malloc and all. 
that why Garbage Collection is necessary in java.

12. What is the drawback to Garbage Collection?

Ans:- Automatic memory management throug Garbage Collector is good and even better for programmer to reduce its work
 but when we see its all the aspects let's assume that a developer is creating one program and he want to use some data
 but not now he might will need it after sometime . The Garbage Collector will free the unused data . What if the developer need it now .
 So I think this may be the drawback of Garbage Collection.

13. What do you mean by mark-and-sweep?

Ans:- In garbage collection model there are three generations : young generation , old generation and permanent generation .
 So mark means check the data or variable which are reachable or not if the variable is reachable it will mark those variable 
 and will remove the rest of the variables and sweep them from Eaden to Survivour (S0, S1). 
	
14. What is the difference between Heap and Stack in Java?
Ans:-  HEAP :
	* Heap is a type of memory which is not organized well.
	* All the reference , address are stored in heap.
	* Non-primitive data type like (Array , obj , ArrayList) are stored in Heap due to its dynamically memory allocation.
	* Heap allocate memory dynamically or as object needed.
	
	STACK :
	* Stack is a type of memory which is well organized.
	* All the values are stored in 	Stack .
	* Stack follows Last in First Out(LIFO) approach.
	* Stack stores primitive data types like (int , float, boolean, byte,short etc).		

15. Write a Stack Program.

Stack Program :

import java.util.Stack;

public class Stack{
  public static void main(String[] args){
	Stack <Integer> stk = new Stack<>();

	stk.push(1);
	stk.push(2);
	stk.push(3);
	stk.push(4);

	int Popped = stk.pop();
	System.out.println("Popped item : "+ Popped);

	int peek = stk.peek();
	System.out.println("Peek item : "+ peek);
	
	int size = stk.size();
	System.out.println("Size : "+ size);

	boolean isEmpty = stk.isEmpty();
	System.out.println("Is stack empty? =  "+ isEmpty);
	
	}
}