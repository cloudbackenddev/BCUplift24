
1. What is the purpose of the Java Garbage Collector?
   a) To allocate memory for objects
   b) 	
   c) To optimize code execution
   d) To manage database connections
Ans:- b) To release memory occupied by unused objects

2. Which part of the Java Virtual Machine (JVM) is responsible for garbage collection?
   a) Class Loader
   b) JVM Compiler
   c) Runtime Data Area
   d) Bytecode Verifier
Ans:-  c) Runtime Data Area

3. How does the Garbage Collector determine if an object is eligible for garbage collection?
   a) By checking if the object is reachable
   b) By examining the object's reference count
   c) By the size of the object
   d) By the object's creation time
Ans:- a) By checking if the object is reachable

4. Which of the following are Java Garbage Collection algorithms?
   a) Stack-based algorithm
   b) Mark-and-Sweep
   c) Bubble Sort
   d) Depth-First Search
Ans:- b) Mark-and-Sweep

5. In Java, which part of the memory is managed by the Garbage Collector?
   a) Stack
   b) Heap
   c) Cache
   d) Register
Ans:-  b) Heap

6. Which of the following is not a generation in the generational garbage collection model?
   a) Young Generation
   b) Old Generation
   c) Infant Generation
   d) Permanent Generation
Ans:-  c) Infant Generation

7. What is a "stop-the-world" event in the context of Garbage Collection?
   a) A situation where the Garbage Collector runs concurrently with the application
   b) A situation where the application is paused while Garbage Collection is performed
   c) A situation where an object is pinned in memory
   d) A situation where Garbage Collection never occurs
Ans:- b) A situation where the application is paused while Garbage Collection is performed

8. What is the purpose of the "System.gc()" method in Java?
   a) To explicitly trigger garbage collection
   b) To increase memory allocation for the JVM
   c) To reduce the memory footprint of an application
   d) To start a new JVM instance
Ans:-  a) To explicitly trigger garbage collection

9. Which garbage collection algorithm is typically used for the Young Generation in the JVM?
   a) Mark-and-Sweep
   b) Generational Garbage Collection
   c) Parallel Garbage Collection
   d) Concurrent Garbage Collection
Ans:- Generational Garbage Collection

10. In the context of Garbage Collection, what is the PermGen (Permanent Generation) used for?
    a) Storing live objects
    b) Storing the heap
    c) Storing class metadata, such as classes and methods
    d) Managing thread pools
Ans:- c) Storing class metadata, such as classes and methods

Subjective Questions:

11. Why Garbage Collection is necessary in Java?
	Garbage Collection Automaticaly delete unuseable code and free space.

12. What is the drawback to Garbage Collection?

13. What do you mean by mark-and-sweep?
	This is a process of Gaebage Collection. mark it is a first step identify unuse data and mark as unused.
	second step sweep. sweep will delete unuse data.

14. What is the difference between Heap and Stack in Java?
Ans:- 
	Heap is dynamic memory.  Heap area store object and instance of the variable
	Stack it is static memory. Stack store data in thread .
	
15. Write a Stack Program.
import java.util.ArrayList;
class StackArrayList{
	ArrayList<Integer> array = new ArrayList<>();

	public void push(int num){
		array.add(num);
		System.out.print("add number..");
	}
	public int pop(){
		if (array .size()>0){
			int popnum = peek();
			array.remove(popnum);	
			return popnum;	
		}
		return -1;
	}

	public int peek(){
		return array.size();
	}
	public ArrayList<Integer> getArrayList(){
		return array;
	}
}

public class Stack{
	
	public static void main(String[] args){	
		StackArrayList a1 = new StackArrayList();
		a1.push(12);
		System.out.print("pop number:- "+" "+a1.pop());
		ArrayList<Integer> array = a1.getArrayList();
		for (int i=0; i<array.size(); i++){
			System.out.println(array.get(i));
		}
		
	}
}


